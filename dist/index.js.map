{"version":3,"file":"index.js","sources":["../src/IonicDiscovery.ts"],"sourcesContent":["import { Services } from \"./Services\";\n\nexport class IonicDiscovery {\n\n    /**\n     * Start listening for broadcast services\n     * @returns void\n     */\n    public start(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            window.cordova.exec(resolve, reject, \"IonicDiscover\", \"start\");\n        });\n    }\n\n    /**\n     * Stop listening for broadcast services\n     * @returns void\n     */\n    public stop(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            window.cordova.exec(resolve, reject, \"IonicDiscover\", \"stop\");\n        });\n    }\n\n    public getServices(): Promise<Services> {\n        return new Promise<Services>((resolve, reject) => {\n            window.cordova.exec(resolve, reject, \"IonicDiscover\", \"getServices\");\n        });\n    }\n}    "],"names":[],"mappings":";MAEa,cAAc,CAAA;AAEvB;;;AAGG;IACI,KAAK,GAAA;QACR,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACnC,YAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,OAAO,CAAC,CAAC;AACnE,SAAC,CAAC,CAAC;KACN;AAED;;;AAGG;IACI,IAAI,GAAA;QACP,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAI;AACnC,YAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,CAAC,CAAC;AAClE,SAAC,CAAC,CAAC;KACN;IAEM,WAAW,GAAA;QACd,OAAO,IAAI,OAAO,CAAW,CAAC,OAAO,EAAE,MAAM,KAAI;AAC7C,YAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,aAAa,CAAC,CAAC;AACzE,SAAC,CAAC,CAAC;KACN;AACJ;;;;"}